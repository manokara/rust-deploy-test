on: push
name: Deploy
jobs:
  build_linux:
    name: Build Linux x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Strip binary
        run: |
          strip target/release/rust-deploy-test
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux64.bin
          path: target/release/rust-deploy-test
  build_mac:
    name: Build macOS x86_64
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: macos.bin
          path: target/release/rust-deploy-test
  build_win:
    name: Build Windows x64
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows.bin
          path: target/release/rust-deploy-test.exe
  release:
    name: Make release
    needs: [build_linux, build_mac, build_win]
    runs-on: ubuntu-latest
    steps:
      - name: Get Linux build
        uses: actions/download-artifact@v1
        with:
          name: linux64.bin
          path: dist_linux
      - name: Get Mac build
        uses: actions/download-artifact@v1
        with:
          name: macos.bin
          path: dist_mac
      - name: Get Windows build
        uses: actions/download-artifact@v1
        with:
          name: windows.bin
          path: dist_windows
      - name: Prepare archives
        run: |
          tar -C dist_linux -Jcvf rust-deploy-test.linux.tar.bz2 .
          tar -C dist_mac -Jcvf rust-deploy-test.macos.tar.bz2 .
          cd dist_windows
          zip -r ../rust-deploy-test.windows.zip .
          cd ..

          ls
      - name: Delete latest release
        uses: author/action-rollback@stable
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          tag: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release latest
        uses: softprops/action-gh-release@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          name: Latest
          tag_name: latest
          prerelease: true
          body: Bleeding edge stuff!
          files: |
            rust-deploy-test.linux.tar.bz2
            rust-deploy-test.macos.tar.bz2
            rust-deploy-test.windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release tag
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            rust-deploy-test.linux.tar.bz2
            rust-deploy-test.macos.tar.bz2
            rust-deploy-test.windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
